[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "firstblog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 23, 2022\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "sample.html",
    "href": "sample.html",
    "title": "PTPN11 mutagenesis",
    "section": "",
    "text": "PTPN11 gene is involved in a rare leukemia. The aim of the project is to investigate the effect of functional mutations in different aminoacids of this protein into developing the illness.\nThe technique introduces mutations by adding universal nucleoside analogs in a pcr amplification process. For each copy, these nucleosides are inserted in one single random place across the sequence. Then an elongation process takes place where 0 to 2 extra analogs are introduced. Finally, these analog bases are substituted by random nucleotides. In these project in particular the targeted protein is PTPN11 and has a sequence of 594 codons / (593 aa + stop) and it’s equivalent CDS of 1782 bp. Let’s have a look at the raw gene sequenece:\n\nlibrary(data.table)\nlibrary(stringi)\nwt_seq<- paste0(readLines(params$gene_file)[-1],collapse=\"\")\ncat(\"\\nPTPN11 gene sequence:\\n\\n\",wt_seq)\n\n\nPTPN11 gene sequence:\n\n ATGACATCGCGGAGATGGTTTCACCCAAATATCACTGGTGTGGAGGCAGAAAACCTACTGTTGACAAGAGGAGTTGATGGCAGTTTTTTGGCAAGGCCTAGTAAAAGTAACCCTGGAGACTTCACACTTTCCGTTAGAAGAAATGGAGCTGTCACCCACATCAAGATTCAGAACACTGGTGATTACTATGACCTGTATGGAGGGGAGAAATTTGCCACTTTGGCTGAGTTGGTCCAGTATTACATGGAACATCACGGGCAATTAAAAGAGAAGAATGGAGATGTCATTGAGCTTAAATATCCTCTGAACTGTGCAGATCCTACCTCTGAAAGGTGGTTTCATGGACATCTCTCTGGGAAAGAAGCAGAGAAATTATTAACTGAAAAAGGAAAACATGGTAGTTTTCTTGTACGAGAGAGCCAGAGCCACCCTGGAGATTTTGTTCTTTCTGTGCGCACTGGTGATGACAAAGGGGAGAGCAATGACGGCAAGTCTAAAGTGACCCATGTTATGATTCGCTGTCAGGAACTGAAATACGACGTTGGTGGAGGAGAACGGTTTGATTCTTTGACAGATCTTGTGGAACATTATAAGAAGAATCCTATGGTGGAAACATTGGGTACAGTACTACAACTCAAGCAGCCCCTTAACACGACTCGTATAAATGCTGCTGAAATAGAAAGCAGAGTTCGAGAACTAAGCAAATTAGCTGAGACCACAGATAAAGTCAAACAAGGCTTTTGGGAAGAATTTGAGACACTACAACAACAGGAGTGCAAACTTCTCTACAGCCGAAAAGAGGGTCAAAGGCAAGAAAACAAAAACAAAAATAGATATAAAAACATCCTGCCCTTTGATCATACCAGGGTTGTCCTACACGATGGTGATCCCAATGAGCCTGTTTCAGATTACATCAATGCAAATATCATCATGCCTGAATTTGAAACCAAGTGCAACAATTCAAAGCCCAAAAAGAGTTACATTGCCACACAAGGCTGCCTGCAAAACACGGTGAATGACTTTTGGCGGATGGTGTTCCAAGAAAACTCCCGAGTGATTGTCATGACAACGAAAGAAGTGGAGAGAGGAAAGAGTAAATGTGTCAAATACTGGCCTGATGAGTATGCTCTAAAAGAATATGGCGTCATGCGTGTTAGGAACGTCAAAGAAAGCGCCGCTCATGACTATACGCTAAGAGAACTTAAACTTTCAAAGGTTGGACAAGGGAATACGGAGAGAACGGTCTGGCAATACCACTTTCGGACCTGGCCGGACCACGGCGTGCCCAGCGACCCTGGGGGCGTGCTGGACTTCCTGGAGGAGGTGCACCATAAGCAGGAGAGCATCATGGATGCAGGGCCGGTCGTGGTGCACTGCAGTGCTGGAATTGGCCGGACAGGGACGTTCATTGTGATTGATATTCTTATTGACATCATCAGAGAGAAAGGTGTTGACTGCGATATTGACGTTCCCAAAACCATCCAGATGGTGCGGTCTCAGAGGTCAGGGATGGTCCAGACAGAAGCACAGTACCGATTTATCTATATGGCGGTCCAGCATTATATTGAAACACTACAGCGCAGGATTGAAGAAGAGCAGAAAAGCAAGAGGAAAGGGCACGAATATACAAATATTAAGTATTCTCTAGCGGACCAGACGAGTGGAGATCAGAGCCCTCTCCCGCCTTGTACTCCAACGCCACCCTGTGCAGAAATGAGAGAAGACAGTGCTAGAGTCTATGAAAACGTGGGCCTGATGCAACAGCAGAAAAGTTTCAGATGA\n\n\n\nwt_counts<- data.table(t(stri_count_fixed(wt_seq,c(\"A\",\"C\",\"T\",\"G\"))/nchar(wt_seq) * 100))\ncolnames(wt_counts)<-c(\"A\",\"C\",\"T\",\"G\")\n\nwt_codons<-as.character(stri_extract_all_regex(wt_seq,'.{1,3}',simplify=T)) #wt_codons <- stri_sub(wt_seq,length=3,from=c(seq(from=1,to=nchar(wt_seq),by=3)))\n\nAnd the “wild type” protein sequence:\n\nrg<-readRDS(\"./data-raw/rg.rds\")\nwt_counts[,(names(table(wt_codons))):= as.list(table(wt_codons) / length(wt_codons)*100)]\nct<-as.data.table(rg,key = \"GeneticCode\")\nwt_aa <- ct[wt_codons,AminoAcids]\ncat(\"\\nPTPN11 amino acid sequence:\\n\\n\",wt_aa)\n\n\nPTPN11 amino acid sequence:\n\n Met Thr Ser Arg Arg Trp Phe His Pro Asn Ile Thr Gly Val Glu Ala Glu Asn Leu Leu Leu Thr Arg Gly Val Asp Gly Ser Phe Leu Ala Arg Pro Ser Lys Ser Asn Pro Gly Asp Phe Thr Leu Ser Val Arg Arg Asn Gly Ala Val Thr His Ile Lys Ile Gln Asn Thr Gly Asp Tyr Tyr Asp Leu Tyr Gly Gly Glu Lys Phe Ala Thr Leu Ala Glu Leu Val Gln Tyr Tyr Met Glu His His Gly Gln Leu Lys Glu Lys Asn Gly Asp Val Ile Glu Leu Lys Tyr Pro Leu Asn Cys Ala Asp Pro Thr Ser Glu Arg Trp Phe His Gly His Leu Ser Gly Lys Glu Ala Glu Lys Leu Leu Thr Glu Lys Gly Lys His Gly Ser Phe Leu Val Arg Glu Ser Gln Ser His Pro Gly Asp Phe Val Leu Ser Val Arg Thr Gly Asp Asp Lys Gly Glu Ser Asn Asp Gly Lys Ser Lys Val Thr His Val Met Ile Arg Cys Gln Glu Leu Lys Tyr Asp Val Gly Gly Gly Glu Arg Phe Asp Ser Leu Thr Asp Leu Val Glu His Tyr Lys Lys Asn Pro Met Val Glu Thr Leu Gly Thr Val Leu Gln Leu Lys Gln Pro Leu Asn Thr Thr Arg Ile Asn Ala Ala Glu Ile Glu Ser Arg Val Arg Glu Leu Ser Lys Leu Ala Glu Thr Thr Asp Lys Val Lys Gln Gly Phe Trp Glu Glu Phe Glu Thr Leu Gln Gln Gln Glu Cys Lys Leu Leu Tyr Ser Arg Lys Glu Gly Gln Arg Gln Glu Asn Lys Asn Lys Asn Arg Tyr Lys Asn Ile Leu Pro Phe Asp His Thr Arg Val Val Leu His Asp Gly Asp Pro Asn Glu Pro Val Ser Asp Tyr Ile Asn Ala Asn Ile Ile Met Pro Glu Phe Glu Thr Lys Cys Asn Asn Ser Lys Pro Lys Lys Ser Tyr Ile Ala Thr Gln Gly Cys Leu Gln Asn Thr Val Asn Asp Phe Trp Arg Met Val Phe Gln Glu Asn Ser Arg Val Ile Val Met Thr Thr Lys Glu Val Glu Arg Gly Lys Ser Lys Cys Val Lys Tyr Trp Pro Asp Glu Tyr Ala Leu Lys Glu Tyr Gly Val Met Arg Val Arg Asn Val Lys Glu Ser Ala Ala His Asp Tyr Thr Leu Arg Glu Leu Lys Leu Ser Lys Val Gly Gln Gly Asn Thr Glu Arg Thr Val Trp Gln Tyr His Phe Arg Thr Trp Pro Asp His Gly Val Pro Ser Asp Pro Gly Gly Val Leu Asp Phe Leu Glu Glu Val His His Lys Gln Glu Ser Ile Met Asp Ala Gly Pro Val Val Val His Cys Ser Ala Gly Ile Gly Arg Thr Gly Thr Phe Ile Val Ile Asp Ile Leu Ile Asp Ile Ile Arg Glu Lys Gly Val Asp Cys Asp Ile Asp Val Pro Lys Thr Ile Gln Met Val Arg Ser Gln Arg Ser Gly Met Val Gln Thr Glu Ala Gln Tyr Arg Phe Ile Tyr Met Ala Val Gln His Tyr Ile Glu Thr Leu Gln Arg Arg Ile Glu Glu Glu Gln Lys Ser Lys Arg Lys Gly His Glu Tyr Thr Asn Ile Lys Tyr Ser Leu Ala Asp Gln Thr Ser Gly Asp Gln Ser Pro Leu Pro Pro Cys Thr Pro Thr Pro Pro Cys Ala Glu Met Arg Glu Asp Ser Ala Arg Val Tyr Glu Asn Val Gly Leu Met Gln Gln Gln Lys Ser Phe Arg Stop\n\nwt_counts[,(names(table(wt_aa))):= as.list(table(wt_aa) / length(wt_aa)*100)]\n\nSo, it is quite difficult to get anything from those. Let’s take a look into its 3D structure:\n    \n    \n    \nWe can also take a look in the AlphaFold Database to compare the wild type structure to the mutants."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog some silly stuff"
  }
]